package com.mintpot.broadcasting.common.entities;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.mintpot.broadcasting.common.enums.Gender;
import com.mintpot.broadcasting.common.model.JsonDateSerializer;
import lombok.Getter;
import lombok.Setter;
import org.hibernate.annotations.SQLDelete;
import org.hibernate.annotations.Where;

import javax.persistence.*;
import java.io.Serializable;
import java.util.Date;

import static javax.persistence.GenerationType.IDENTITY;

/**
 * User generated by hbm2java
 */
@Entity
@Getter
@Setter
@Table(name = "tbl_user", uniqueConstraints = @UniqueConstraint(columnNames = {"username", "phone", "email"}))
@SQLDelete(sql = "update tbl_user us set us.active = 0 where us.id = ?")
@Where(clause = "active = 1")
public class User extends BaseEntity<Long> implements Serializable {

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "id", unique = true, nullable = false)
    private Long id;

    private String name;

    private String username;

    @JsonIgnore
    private String password;

    private String phone;

    private String avatar;

    @Temporal(TemporalType.DATE)
    @Column(name = "birthday", length = 10)
    @JsonSerialize(using = JsonDateSerializer.class)
    private Date birthday;

    private String email;

    @Enumerated(EnumType.STRING)
    private Gender gender;

    @ManyToOne
    @JoinColumn(name = "role_id")
    private Role role;

    @ManyToOne
    @JoinColumn(name = "org_id")
    private Organization organization;

    private boolean active;

    private String status;
}
